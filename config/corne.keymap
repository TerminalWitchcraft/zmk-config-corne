#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define NAV 1
#define SYM 2
#define ADJ 3
#define EXTRA 4

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <180>;
            global-quick-tap;
        };

        para: para {
            compatible = "zmk,behavior-tap-dance";
            label = "PARA";
            #binding-cells = <0>;
            bindings = <&kp LEFT_PARENTHESIS>, <&kp RIGHT_PARENTHESIS>;
        };

        caps: caps {
            compatible = "zmk,behavior-caps-word";
            label = "CAPS";
            #binding-cells = <0>;
            continue-list = <MINUS BACKSPACE>;
        };

        paraless: paraless {
            compatible = "zmk,behavior-mod-morph";
            label = "PARALESS";
            bindings = <&kp LEFT_PARENTHESIS>, <&kp LESS_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        paragreat: paragreat {
            compatible = "zmk,behavior-mod-morph";
            label = "PARAGREAT";
            bindings = <&kp RIGHT_PARENTHESIS>, <&kp GREATER_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        hml: hrm_left {
            compatible = "zmk,behavior-hold-tap";
            label = "hrm_left";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <7 18 19 19 20 21 22 31 32 33 34 41 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 40 41 39 36 37 38>;
        };

        hmr: hrm_right {
            compatible = "zmk,behavior-hold-tap";
            label = "hrm_right";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41>;
        };

        lt_bkspace: lt_bkspace {
            compatible = "zmk,behavior-hold-tap";
            label = "LT_BKSPACE";
            bindings = <&lt>, <&kp>;

            #binding-cells = <2>;
            require-prior-idle-ms = <150>;
            flavor = "tap-preferred";
            tapping-term-ms = <250>;
            quick-tap-ms = <125>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41>;
        };

        sk_lazy: sk_lazy {
            compatible = "zmk,behavior-sticky-key";
            label = "SK_LAZY";
            bindings = <&kp>;
            #binding-cells = <1>;
            release-after-ms = <200>;
            lazy;
            quick-release;
        };
    };

    macros {
        browsertab: browsertab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp TAB>,
                <&macro_release>,
                <&kp LCTRL>;
        };
    };

    combos { compatible = "zmk,combos"; };

    //

    keymap {
        compatible = "zmk,keymap";

        Base {
            display-name = "Base";

            // -----------------------------------------------------------------------------------------
            // |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |
            // |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |
            // |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |
            // | GUI | CTRL | SHFT | LWR | SPC |   | ENT | RSE  | BKSP | ALT | ESC |

            bindings = <
&kp K_MUTE  &kp SQT              &kp U            &kp O                &kp F              &kp Z          &kp B        &kp P                 &kp Y                 &kp L             &kp W                 &kp C_VOLUME_UP
&caps       &hml LEFT_CONTROL A  &hml LEFT_ALT I  &hml LEFT_COMMAND E  &hml LEFT_SHIFT N  &kp M          &kp G        &hmr RIGHT_SHIFT T    &hmr RIGHT_COMMAND S  &hmr RIGHT_ALT R  &hmr RIGHT_CONTROL C  &kp C_VOLUME_DOWN
&mo 6       &kp PERIOD           &kp COMMA        &kp SLASH            &kp H              &kp X          &kp K        &kp D                 &kp V                 &kp J             &kp Q                 &to 5
                                                  &kp TAB              &lt 3 BACKSPACE    &lt 1 ENTER    &lt 4 SPACE  &lt_bkspace 2 ESCAPE  &kp LS(TAB)
            >;
        };

        NAV {
            display-name = "Nav";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            // | GUI | CTRL | SHFT | LWR | SPC |   | ENT | RSE  | BKSP | ALT | ESC |

            bindings = <
&trans  &trans            &trans        &trans            &trans          &trans    &kp K_REDO  &kp K_PASTE     &kp LC(N)      &kp LC(P)     &kp K_UNDO  &trans
&trans  &sk LEFT_CONTROL  &sk LEFT_ALT  &sk LEFT_COMMAND  &sk LEFT_SHIFT  &trans    &kp K_COPY  &kp LEFT_ARROW  &kp DOWN       &kp UP_ARROW  &kp RIGHT   &trans
&trans  &trans            &trans        &trans            &trans          &trans    &kp INSERT  &kp HOME        &kp PAGE_DOWN  &kp PAGE_UP   &kp END     &trans
                                        &trans            &trans          &trans    &trans      &trans          &trans
            >;
        };

        SYM_LEFT {
            display-name = "sym_left";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &trans         &kp LEFT_BRACKET      &kp MINUS       &kp RIGHT_BRACKET      &kp BACKSLASH       &trans  &trans     &trans    &trans    &trans     &trans
&trans  &kp LESS_THAN  &kp LEFT_PARENTHESIS  &kp EQUAL       &kp RIGHT_PARENTHESIS  &kp GREATER_THAN    &trans  &sk LSHFT  &sk LGUI  &sk LALT  &sk LCTRL  &trans
&trans  &trans         &kp LEFT_BRACE        &kp UNDERSCORE  &kp RIGHT_BRACE        &kp PLUS            &trans  &trans     &trans    &trans    &trans     &trans
                                             &trans          &trans                 &trans              &trans  &trans     &trans
            >;
        };

        SYM_RIGHT {
            bindings = <
&trans  &trans     &trans    &trans    &trans     &trans    &kp PERCENT      &kp GRAVE    &kp CARET     &kp DOLLAR  &trans         &trans
&trans  &sk LCTRL  &sk LALT  &sk LGUI  &sk LSHFT  &trans    &kp AMPERSAND    &kp AT_SIGN  &kp ASTERISK  &kp POUND   &kp SEMICOLON  &trans
&trans  &trans     &trans    &trans    &trans     &trans    &kp EXCLAMATION  &kp COLON    &kp TILDE     &kp PIPE    &trans         &trans
                             &trans    &trans     &trans    &trans           &trans       &trans
            >;

            label = "sym_right";
        };

        NUM {
            bindings = <
&trans  &trans  &sk_lazy N7  &sk_lazy N8  &sk_lazy N9  &trans         &trans  &trans           &trans             &trans         &trans             &trans
&trans  &trans  &sk_lazy N4  &sk_lazy N5  &sk_lazy N6  &trans         &trans  &sk RIGHT_SHIFT  &sk RIGHT_COMMAND  &sk RIGHT_ALT  &sk RIGHT_CONTROL  &trans
&trans  &trans  &sk_lazy N1  &sk_lazy N2  &sk_lazy N3  &sk_lazy N0    &trans  &trans           &trans             &trans         &trans             &trans
                             &trans       &trans       &trans         &trans  &trans           &trans
            >;

            label = "num";
        };

        qwerty {
            display-name = "fallback";
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E    &kp R  &kp T         &kp Y    &kp U            &kp I      &kp O    &kp P     &kp BACKSPACE
&kp LSHFT  &kp A  &kp S  &kp D    &kp F  &kp G         &kp H    &kp J            &kp K      &kp L    &kp SEMI  &kp SQT
&kp LCTRL  &kp Z  &kp X  &kp C    &kp V  &kp B         &kp N    &kp M            &kp COMMA  &kp DOT  &kp FSLH  &to 0
                         &kp TAB  &mo 1  &kp ESCAPE    &kp RET  &lt 2 BACKSPACE  &kp DEL
            >;
        };

        SYS {
            display-name = "System";
            bindings = <
&trans  &kp F1        &kp F2        &kp F3        &kp F4        &kp F5            &kp F6  &kp F7  &kp F8  &kp F9  &kp F10      &trans
&trans  &kp F11       &kp F12       &trans        &trans        &studio_unlock    &trans  &trans  &trans  &trans  &trans       &trans
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 4  &bt BT_CLR_ALL    &trans  &trans  &trans  &trans  &bootloader  &trans
                                    &trans        &trans        &trans            &trans  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        l3 {
            if-layers = <1 2>;
            then-layer = <6>;
        };
    };
};
